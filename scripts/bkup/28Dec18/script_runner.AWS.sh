#!/bin/bash


PATH="/mnt/space/workspace/instrument_processing/scripts/:$PATH"

for file in `ls /mnt/space/workspace/instrument_processing/log/screenlog.0`


# %% is suffix removal and replacement
# % is suffix removal
# # is prefix removal
# ## is prefix removal and replacment

do 
#filenosufx=${file%S***};
echo ${file}
sleep 5s
cp ${file} ${file}.tmp
echo "copy of screenlog.0 to tmp complete\n";
sleep 5s
quick_extraction.short_version.pl ${file}.tmp >> ${file}.processed
echo "quick_extraction.short_version complete\n"
process_texts.pl 
echo "process_texts.pl complete\n"
process_all_data.pl 
echo "process_all_data.pl complete\n"
rm ${file}.tmp
echo "removed tmp file"
done
### this section is done on beagle and sync'ed to AWS-wb-26June17_2217
####taken from the bash & date man pages and http://www.cyberciti.biz/faq/how-to-read-time-in-shell-script/
nowhr=$(date +"%H") #get current hour
nowmin=$(date +"%M") #get current minutes
###nowmonth=$(date +"%b")
###nowdy=$(date +"%d")
###nowyr=$(date +"%y")
###andthen=$(date +"%T")
###if [ "$nowhr" == "13" ]&&[ "$nowmin" -ge "45" ]&&[ "$nowmin" -lt "60" ] 
####its midnight and before the 15 minute mark.  Should only run once per day. 
###then
####stop screen: SIGTSTP is stop typed at terminal vs SIGSTOP which is stop process
###  echo "running screenlog cleanup process"
###  /bin/kill -s SIGTSTP `pidof screen`
###  cp ${file} ${file}.tmp
###  echo "#restart" $andthen > ${file}
###  # restart screen 
###  /bin/kill -s SIGCONT `pidof screen`
###  filedir=/mnt/space/workspace/instrument_processing/log
###  file2=screenlog.0
###  mv ${filedir}/${file2}.tmp ${filedir}/archive/${file2}.bkup_$nowdy$nowmonth$nowyr\_$nowhr$nowmin
###  gzip ${filedir}/archive/${file2}.bkup_$nowdy$nowmonth$nowyr\_$nowhr$nowmin
### if [ -e "../log/screenlog.0.processed" ]
###      then
###      rm ../log/screenlog.0.processed
###  fi
#move both to bkup directory with the date in the name
# need to handle startup notation in the screenlog.0 file,
# and setup screen to start automatically, plus match
# phone numbers to station numbers.
###fi 

echo "checking for email alerts"
echo "nowhr" $nowhr
echo "nowmin" $nowmin
if ([ "$nowhr" == "02" ]||[ "$nowhr" == "04" ]||[ "$nowhr" == "06" ]||[ "$nowhr" == "08" ]||[ "$nowhr" == "10" ]||[ "$nowhr" == "12" ]||[ "$nowhr" == "14" ]||[ "$nowhr" == "16" ]||[ "$nowhr" == "18" ]||[ "$nowhr" == "20" ]||[ "$nowhr" == "22" ])&&[ "$nowmin" -ge "45" ]&&[ "$nowmin" -lt "60" ]
then
echo "yes on alerts being triggered by script_runner"
alerts_not_reporting_2hrs.pl
fi
echo "done checking for email alerts"

echo "done cleaning up screenlog, heading to plot data"
/mnt/space/workspace/instrument_processing/scripts/gnuplot/batch_plot_interactive_commands.sh
echo "data plots completed"

echo "calculating stats for sql update"
calc_stats.pl
echo "calculating stats for sql update complete"

echo "calculating stats for summary table"
calc_stats_alldata.pl
echo "calculating stats for summary table complete"

##this section has to follow the calc_stats_alldata.pl because it uses the files
##  generated by that program.
echo "checking for advanced alarms"
#check the daily total at 6 am so you can act on it if needed.
if ([ "$nowhr" == "06" ])&&[ "$nowmin" -ge "0" ]&&[ "$nowmin" -lt "16" ]
then
echo "yes on 24HR alarms being triggered by script_runner"
alerts_all_parameters.pl 24HR

#check every 4 hours
elif ([ "$nowhr" == "00" ]||[ "$nowhr" == "04" ]||[ "$nowhr" == "08" ]||[ "$nowhr" == "12" ]||[ "$nowhr" == "16" ]||[ "$nowhr" == "20" ])&&[ "$nowmin" -ge "0" ]&&[ "$nowmin" -lt "16" ]
then
echo "yes on 4HR alarms being triggered by script_runner"
alerts_all_parameters.pl 4HR

#check every hour
elif [ "$nowmin" -ge "00" ]&&[ "$nowmin" -lt "16" ]
then
echo "yes on 1HR alarms being triggered by script_runner"
alerts_all_parameters.pl 1HR
	    
#check every 15 minutes
else
echo "yes on 15MIN alarms being triggered by script_runner"
alerts_all_parameters.pl 15MIN
fi

echo "synching data to webserver"
/usr/bin/rsync --exclude "*ALLDATA.csv" --exclude "*RESET.csv" -rv /mnt/space/workspace/instrument_processing/data/ /var/lib/tomcat7/webapps/ROOT/data/
echo "rsync to tomcat directory complete\n"
echo "removing screenlog.0.processed\n"
rm ${file}.processed
echo "complete\n"
